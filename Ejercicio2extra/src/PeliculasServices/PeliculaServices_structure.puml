@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "PeliculasServices.PeliculaServices",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1529947354 { 
   	label=Peliculas
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Peliculas1529947354[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Peliculas</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   director: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   edadMinima: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   espectador: Espectador [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   precio: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   time: LocalTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   titulo: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1935828538 { 
   	label=Espectador
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Espectador1935828538[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Espectador</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   dinero: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   edad: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_2100413 { 
   	label=Cine
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Cine2100413[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Cine</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   Sala: String[][] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   peliculas: Peliculas [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   precio: double [1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_504794053 { 
   	label=CineServices
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   CineServices504794053[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CineServices</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   cine: Cine [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   dataInfoAllCine: ArrayList&lt;Cine&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ps: PeliculaServices [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ configurarSalas(): String[][]</TD></TR>
<TR><TD ALIGN="LEFT" >+ mostrarSalas()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showAllData(dataInfoAllCine: ArrayList&lt;Cine&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_590151864 { 
   	label=EspectadorServices
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   EspectadorServices590151864[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EspectadorServices</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   peliculas: Peliculas [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   ps: PeliculaServices [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ mostarInfoPersona(espectadores: ArrayList&lt;Espectador&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_769450152 { 
   	label=PeliculasServices
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   PeliculaServices769450152[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PeliculaServices</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   cine: Cine [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   conteo: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   peliculasData: ArrayList&lt;Peliculas&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >#   scanner: Scanner [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   time: LocalTime [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addMovie(espectador: Espectador, dataInfoAllCine: ArrayList&lt;Cine&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ llenarDataPeliculas(dataInfoAllCine: ArrayList&lt;Cine&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ llenarEspectador(dataInfoAllCine: ArrayList&lt;Cine&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ mostrarInfo()</TD></TR>
<TR><TD ALIGN="LEFT" >+ noRepetido(id: int): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
Cine2100413 -> Peliculas1529947354[label="peliculas
[0..1]"];
CineServices504794053 -> Cine2100413[label="cine
[0..1]"];
CineServices504794053 -> Cine2100413[label="dataInfoAllCine
[0..*]"];
CineServices504794053 -> PeliculaServices769450152[label="ps
[0..1]"];
EspectadorServices590151864 -> PeliculaServices769450152[label="ps
[0..1]"];
PeliculaServices769450152 -> Cine2100413[label="cine
[0..1]"];
PeliculaServices769450152 -> CineServices504794053[label="llenarDataPeliculas() -> configurarSalas()"];
PeliculaServices769450152 -> Peliculas1529947354[label="peliculasData
[0..*]"];
Peliculas1529947354 -> Espectador1935828538[label="espectador
[0..1]"];
    
}
@enduml